{"version":3,"sources":["store/context.js","store/templates/elements.js","store/templates/types.js","store/templates/actions.js","store/auth/types.js","store/auth/actions.js","store/index.js","components/auth.js","api/templates.js","components/builder/resizeable.js","components/builder/canvas.js","components/builder/card.js","components/builder/cardContainer.js","components/builder/fontLoader.js","components/builder/canvasItems.js","components/builder/canvasContainer.js","components/getCurrentTemplate.js","components/template.js","config.js","components/certificate.js","components/viewCertificate.js","components/recipientPortal.js","components/requestedChanges.js","App.js","store/rootReducer.js","store/templates/reducer.js","store/auth/reducer.js","store/templates/initialState.js","store/useStore.js","store/StoreProvider.js","index.js"],"names":["Context","createContext","getNewText","type","id","makeid","isConstant","name","value","color","x","y","attr","fontSize","getNewImage","src","height","width","scale","draggable","result","characters","charactersLength","length","i","charAt","Math","floor","random","CREATE_ITEM","EDIT_CANVAS","SET_ACTIVE_ITEM","SET_STAGE_REF","EDIT_WHOLE_CANVAS","SET_CURRENT_TEMPLATE","SET_USER_TEMPLATES","SET_FONTS","ADD_FONT","createTextItem","types","payload","editCanvas","items","info","setActiveItem","item","setStageRef","stage","editWholeCanvas","setUserTemplates","templates","setUserTemplatesLoading","loading","setCurrentTemplate","template","addFont","font","setFonts","fonts","createImageItem","img","SIGN_IN","SIGN_OUT","signIn","user","setLoading","state","SignIn","auth","getAuth","useContext","store","dispatch","console","log","uid","style","display","margin","marginTop","verticalAlign","border","borderRadius","isSignedIn","flexDirection","fontFamily","displayName","onClick","signOut","then","alert","catch","error","backgroundColor","cursor","fontWeight","provider","GoogleAuthProvider","signInWithPopup","credentialFromResult","accessToken","signIntoStore","code","message","email","credentialFromError","createTemplate","a","description","createdAt","Date","getTime","exportCertificatesAs","canvas","ratio","baseImageHeight","baseImageWidth","alt","storageRef","fill","db","getFirestore","addDoc","collection","getTemplates","getDocs","where","res","forEach","data","temp","push","editTemplateItems","docRef","doc","getDoc","docSnap","map","parseInt","setDoc","toString","uploadImage","image","refs","storage","getStorage","imageRef","ref","uploadBytes","getURL","getDownloadURL","deleteTemplate","deleteDoc","addImg","url","Promise","resolve","reject","im","window","Image","crossOrigin","onload","getCertificates","cert","getMyCertificates","receiverEmail","toggleCertificateSharing","certificateID","updateDoc","isShareable","requestChangeInCertificate","issuerID","changes","certificate_id","issuer_uid","new_name","new_email","waiting_for_approval","viewRequestedChanges","getOneCertificate","approveRequest","certId","requestId","isApproved","is_approved","docRef2","receiverName","newName","newEmail","DynamicImage","shapeProps","isSelected","onChange","shapeRef","React","useRef","trRef","useEffect","current","nodes","getLayer","batchDraw","Fragment","onTap","onDragEnd","e","target","onTransformEnd","node","scaleX","scaleY","max","boundBoxFunc","oldBox","newBox","Canvas","stageRef","textRef","currentTemplate","activeItem","find","drag","items_","_lastPos","templateActions","justifyContent","alignItems","padding","uri","toDataURL","pixelRatio","link","document","createElement","download","href","body","appendChild","click","removeChild","innerHeight","newAttrs","p","onDragMove","text","textDecoration","ItemTypes","marginBottom","Card","index","moveCard","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","drop","useDrag","isDragging","opacity","Container","useCallback","dragCard","update","$splice","renderCard","loadFonts","sort","axios","get","CanvasItems","useState","setImageState","imageBlob","setImageBlob","numberOfFonts","setNumberOfFonts","setImage","oldWidth","newWidth","api","setBaseImage","editActiveItem","val","checked","onChangeImg","file","reader","FileReader","readAsDataURL","onloadend","deleteActiveItem","filter","onKeyDown","key","DndProvider","backend","HTML5Backend","defaultChecked","defaultValue","onChangeCapture","overflow","paddingRight","slice","family","fileLink","files","regular","prev","location","reload","BuilderContainer","paddingLeft","overflowY","getImageItemWithSourceUrl","imgRef","err","getCurrentTemplateImageItems","promises","it","all","Template","setloading","setAppLoading","getUploadedTemplates","apiUrl","replace","join","rel","head","finally","borderRight","className","marginLeft","userTemplates","srcTemplate","rev","getCurrentTemplate","imgItem","app","isLoading","dotenv","config","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","env","process","Certificate","currentCertificate","setCurrentCertificate","certificates","setCertificates","setTemplates","selectedTemplate","setSelectedTemplate","fields","setfields","selectedTemplateId","setSelectedTemplateId","setReceiverName","selectedTemplateName","setSelectedTemplateName","setEmail","college","setCollege","batch","setBatch","degree","setDegree","department","setDepartment","rollNo","setRollNo","labelStyles","marginRight","mandatoryFields","fieldName","onChangeFunc","event","placeHolder","resetSelectedCertificateData","setCurrentCertificateFunc","navigator","clipboard","writeText","hederaFileId","setSelectedTemplateFunc","mandatoryField","placeholder","field","preventDefault","req","templateId","urls","post","createCertificate","ViewCertificate","useParams","certificateMetaData","setCertificateMetaData","RecipientPortal","requestChanges","setRequestChanges","newReceiverName","setNewReceiverName","setNewEmail","overFlowY","RequestedChanges","existingCertificate","setExistingCertificate","margintTop","App","slices","setUser","pathname","setPathName","toolBarStyles","onAuthStateChanged","user_obj","boxShadow","toolbar","path","exact","rootReducer","action","Object","keys","reduce","acc","prop","initialState","photo","isVerified","isBaseImageLoaded","otherImagesLoaded","baseImage","otherImages","useStore","useReducer","StoreProvider","children","Provider","Store","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.38a57f49.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\nconst Context = createContext({})\n\nexport default Context","\n\nexport const getNewText = (type) => {\n    let text = {\n        id: makeid(),\n        isConstant: false,\n        type: \"text\",\n        name: \"text\",\n        value: \"Example text field\",\n        color: \"#fff\",\n        x: 10,\n        y: 10,\n        attr: {\n            fontSize: 75,\n        }\n    }\n    return text\n}\n\nexport const getNewImage = () => {\n    let image = {\n        isConstant: false,\n        id: makeid(),\n        type: \"image\",\n        name: \"image\",\n        src: \"default\",\n        x: 10,\n        y: 10,\n        height: 100,\n        width: 100,\n        scale: 1,\n        draggable: true,\n    }\n    return image\n}\n\nexport const baseImage = {\n    id: 'baseImage',\n    type: \"base-image\",\n    name: \"Base template image\",\n    src: \"default\",\n}\n\n\nconst makeid = () => {\n    let length = 12\n    let result = ''\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    let charactersLength = characters.length\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() *\n            charactersLength))\n    }\n    return result\n}","export const CREATE_ITEM = 'CREATE_ITEM'\nexport const EDIT_CANVAS = 'EDIT_CANVAS'\nexport const SET_ACTIVE_ITEM = 'SET_ACTIVE_ITEM'\nexport const SET_STAGE_REF = 'SET_STAGE_REF'\nexport const EDIT_WHOLE_CANVAS = 'EDIT_WHOLE_CANVAS'\n\nexport const SET_CURRENT_TEMPLATE = 'SET_CURRENT_TEMPLATE'\nexport const SET_USER_TEMPLATES = 'SET_USER_TEMPLATES'\nexport const SET_USER_TEMPLATES_LOADING = 'SET_USER_TEMPLATES_LOADING'\n\nexport const SET_FONTS = 'SET_FONTS'\nexport const SET_FONTS_LOADING = 'SET_FONTS_LOADING'\nexport const ADD_FONT = 'ADD_FONT'","import { getNewImage, getNewText } from \"./elements\"\nimport * as types from \"./types\"\nimport { getStorage, getDownloadURL, uploadBytes, deleteObject, ref } from \"firebase/storage\";\n\nexport const createTextItem = type => {\n    return {\n        type: types.CREATE_ITEM,\n        payload: getNewText()\n    }\n}\nexport const editCanvas = items => {\n    return {\n        type: types.EDIT_CANVAS,\n        payload: items,\n        info: \"description\",\n    }\n}\nexport const setActiveItem = item => {\n    return {\n        type: types.SET_ACTIVE_ITEM,\n        payload: item,\n        info: \"description\"\n    }\n}\nexport const setStageRef = stage => {\n    return {\n        type: types.SET_STAGE_REF,\n        payload: stage,\n        info: \"description\"\n    }\n}\nexport const editWholeCanvas = items => {\n    return {\n        type: types.EDIT_WHOLE_CANVAS,\n        payload: items,\n        info: \"description\"\n    }\n}\n\n\nexport const setUserTemplates = templates => {\n    return {\n        type: types.SET_USER_TEMPLATES,\n        payload: templates,\n        info: \"description\"\n    }\n}\nexport const setUserTemplatesLoading = loading => {\n    return {\n        type: types.SET_USER_TEMPLATES_LOADING,\n        payload: loading,\n        info: \"description\"\n    }\n}\nexport const setCurrentTemplate = template => {\n    return {\n        type: types.SET_CURRENT_TEMPLATE,\n        payload: template,\n        info: \"description\"\n    }\n}\n\nexport const addFont = font => {\n    return {\n        type: types.ADD_FONT,\n        payload: font,\n        info: \"description\"\n    }\n}\nexport const setFonts = fonts => {\n    return {\n        type: types.SET_FONTS,\n        payload: fonts,\n        info: \"description\"\n    }\n}\nexport const createImageItem = img => {\n    return {\n        type: types.CREATE_ITEM,\n        payload: img\n    }\n}\n","export const SIGN_IN = 'SIGN_IN'\nexport const SIGN_OUT = 'SIGN_OUT'\nexport const SIGN_UP = 'SIGN_UP'\nexport const UPDATE_USER = 'UPDATE_USER'\nexport const UPDATE_USER_IMAGE = 'UPDATE_USER_IMAGE'\n","import { SIGN_IN, SIGN_OUT } from \"./types\"\n\nexport const signIn = user => {\n    return {\n        type: SIGN_IN,\n        payload: user\n    }\n}\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n","export * as templateActions from './templates/actions'\nexport { signIn, signOut } from './auth/actions'\n\nexport const setLoading = state => {\n    return {\n        type: 'SET_LOADING_STATE',\n        payload: state,\n\n    }\n}","import React, { useContext } from \"react\";\nimport {\n  getAuth,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n} from \"firebase/auth\";\nimport Context from \"../store/context\";\nimport { signIn as signIntoStore, signOut as signOutStore } from \"../store\";\nfunction SignIn() {\n  const auth = getAuth();\n  const { store, dispatch } = useContext(Context);\n  const signIn = () => {\n    console.log(\"Auth\");\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        dispatch(signIntoStore(user));\n        console.log(user);\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n  };\n  const signOutUser = () => {\n    signOut(auth)\n      .then(() => {\n        dispatch(signOutStore());\n        alert(\"Signed Out\");\n      })\n      .catch((error) => {\n        alert(\"Signout failed\");\n      });\n  };\n  console.log(store.user.uid);\n\n  return (\n    <div style={{ width: \"100%\", height: \"80%\", display: \"flex\" }}>\n      <div\n        style={{\n          margin: \"0 auto\",\n          marginTop: 70,\n          verticalAlign: \"center\",\n          border: \"1px solid #BED7E1\",\n          borderRadius: 10,\n          width: 300,\n          height: 100,\n          display: \"flex\",\n        }}\n      >\n        {store.user.isSignedIn ? (\n          <div\n            style={{ margin: \"auto\", display: \"flex\", flexDirection: \"column\" }}\n          >\n            <span style={{ fontFamily: \"monospace\", fontSize: 18 }}>\n              Hello {store.user.displayName}\n            </span>\n            <div\n              onClick={signOutUser}\n              style={{\n                border: \"2px solid #BED7E1\",\n                backgroundColor: \"#BED7E1\",\n                borderRadius: 5,\n                height: 30,\n                display: \"flex\",\n                width: 80,\n                cursor: \"pointer\",\n                margin: \"auto\",\n                marginTop: 15,\n              }}\n            >\n              <div\n                style={{\n                  margin: \"auto\",\n                  fontWeight: \"bold\",\n                  fontFamily: \"monospace\",\n                  color: \"white\",\n                  fontSize: 14,\n                }}\n              >\n                Sign Out\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            style={{ margin: \"auto\", display: \"flex\", flexDirection: \"column\" }}\n          >\n            <span style={{ fontFamily: \"monospace\", fontSize: 18 }}>\n              Sign in to continue\n            </span>\n            <div\n              onClick={signIn}\n              style={{\n                border: \"1px solid #BED7E1\",\n                backgroundColor: \"#BED7E1\",\n                borderRadius: 5,\n                height: 30,\n                display: \"flex\",\n                width: 80,\n                cursor: \"pointer\",\n                margin: \"auto\",\n                marginTop: 15,\n              }}\n            >\n              <div\n                style={{\n                  margin: \"auto\",\n                  fontWeight: \"bold\",\n                  fontFamily: \"monospace\",\n                  color: \"white\",\n                  fontSize: 14,\n                }}\n              >\n                SignIn\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","import {\n  getFirestore,\n  collection,\n  addDoc,\n  getDoc,\n  getDocs,\n  query,\n  where,\n  setDoc,\n  doc,\n  deleteDoc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport {\n  getStorage,\n  getDownloadURL,\n  uploadBytes,\n  deleteObject,\n  ref,\n} from \"firebase/storage\";\nimport {\n  Client,\n  PrivateKey,\n  AccountId,\n  AccountCreateTransaction,\n  AccountBalanceQuery,\n  Hbar,\n  FileAppendTransaction,\n  FileContentsQuery,\n} from \"@hashgraph/sdk\";\nimport { getNewImage } from \"../store/templates/elements\";\n\nexport const createTemplate = async (info) => {\n  const { uid, name, description } = info;\n  const template = {\n    name,\n    description,\n    uid,\n    createdAt: new Date().getTime(),\n    exportCertificatesAs: \"png\",\n    canvas: {\n      ratio: {\n        x: 1,\n        y: 1,\n      },\n      baseImageHeight: \"default\",\n      baseImageWidth: \"default\",\n      items: [\n        {\n          ...getNewImage(),\n          draggable: false,\n          type: \"base-image\",\n          name: \"Base template image\",\n          alt: \"Example image\",\n          storageRef: \"default_template_images/base.png\",\n        },\n        {\n          type: \"text\",\n          value: \"Example text field\",\n          x: 25,\n          y: 25,\n          fill: \"#fff\",\n          attr: {\n            fontSize: 200,\n            fontFamily: \"Poppins\",\n          },\n          isConstant: false,\n        },\n      ],\n    },\n  };\n  const db = getFirestore();\n  const result = await addDoc(collection(db, \"templates\"), template);\n  return result;\n};\n\nexport const getTemplates = async (uid) => {\n  const db = getFirestore();\n  const result = await getDocs(\n    collection(db, \"templates\"),\n    where(\"uid\", \"==\", uid)\n  );\n  console.log(result);\n  let res = [];\n  result.forEach((template) => {\n    console.log(template.data().uid, \"     \", uid);\n    if (template.data().uid === uid) {\n      let temp = {\n        id: template.id,\n        data: template.data(),\n      };\n      res.push(temp);\n    }\n  });\n  return res;\n};\n\nexport const editTemplateItems = async (id, items) => {\n  console.log(id, items);\n  const db = getFirestore();\n  const docRef = doc(db, \"templates\", id);\n  const docSnap = await getDoc(docRef);\n  items.map((item) => {\n    if (item.type === \"image\" || item.type === \"base-image\") {\n      if (item.src !== \"default\") {\n        item.src = \"image\";\n      }\n    }\n    if (item.type === \"text\") {\n      item.attr.fontSize = parseInt(item.attr.fontSize) || 25;\n    }\n  });\n  console.log(docSnap.data());\n  let template = {\n    ...docSnap.data(),\n    canvas: {\n      ...docSnap.data().canvas,\n      items: items,\n    },\n  };\n\n  const result = await setDoc(doc(db, \"templates\", id.toString()), template);\n  return result;\n};\n\nexport const uploadImage = async (image, refs) => {\n  //upload image to firebase storage\n  const storage = getStorage();\n  const imageRef = ref(storage, refs);\n  const result = await uploadBytes(imageRef, image);\n  console.log(\"Uploaded\");\n  return result;\n};\n\nexport const getURL = async (refs) => {\n  const storage = getStorage();\n  const imageRef = ref(storage, refs);\n  const result = await getDownloadURL(imageRef);\n  return result;\n};\n\nexport const deleteTemplate = async (id) => {\n  await deleteDoc(doc(getFirestore(), \"templates\", id));\n};\n\nexport const addImg = async () => {\n  let url = await getDownloadURL(\n    ref(getStorage(), \"default_template_images/image.jpg\")\n  );\n  return new Promise((resolve, reject) => {\n    let im = new window.Image();\n    im.crossOrigin = \"anonymous\";\n    im.src = url;\n    im.height = im.height;\n    im.width = im.width;\n    im.onload = () => {\n      const img = {\n        isConstant: false,\n        id: getNewImage().id,\n        name: \"new image\",\n        type: \"image\",\n        src: im,\n        draggable: true,\n        x: 100,\n        y: 100,\n        width: im.width,\n        height: im.height,\n        storageRef: \"default_template_images/image.jpg\",\n      };\n      resolve(img);\n    };\n  });\n};\n\nexport const getCertificates = async (uid) => {\n  const db = getFirestore();\n  const result = await getDocs(\n    collection(db, \"certificates\"),\n    where(\"uid\", \"==\", uid)\n  );\n  let res = [];\n  result.forEach((cert) => {\n    if (cert.data().uid === uid) {\n      let temp = {\n        id: cert.id,\n        data: cert.data(),\n      };\n      res.push(temp);\n    }\n  });\n  console.log(res);\n  return res;\n};\n\nexport const getMyCertificates = async (email) => {\n  const db = getFirestore();\n  const result = await getDocs(\n    collection(db, \"certificates\"),\n    where(\"receieverEmail\", \"==\", email)\n  );\n  let res = [];\n  result.forEach((cert) => {\n    if (cert.data().receiverEmail === email) {\n      let temp = {\n        id: cert.id,\n        data: cert.data(),\n      };\n      res.push(temp);\n    }\n  });\n  console.log(res);\n  return res;\n};\n\nexport const toggleCertificateSharing = async (certificateID, state) => {\n  const db = getFirestore();\n  const docRef = await doc(db, \"certificates\", certificateID);\n  const result = await updateDoc(docRef, { isShareable: state });\n  console.log(result);\n  return result;\n};\n\nexport const requestChangeInCertificate = async (\n  certificateID,\n  issuerID,\n  changes\n) => {\n  const db = getFirestore();\n  const result = await addDoc(collection(db, \"changes_requested\"), {\n    certificate_id: certificateID,\n    issuer_uid: issuerID,\n    new_name: changes.name,\n    new_email: changes.email,\n    waiting_for_approval: true,\n  });\n};\n\nexport const viewRequestedChanges = async (uid) => {\n  const db = getFirestore();\n  const result = await getDocs(\n    collection(db, \"changes_requested\"),\n    where(\"issuer_uid\", \"==\", uid)\n  );\n  let res = [];\n  result.forEach((x) => {\n    if (x.data().waiting_for_approval === true) {\n      res.push({ id: x.id, data: x.data() });\n    }\n  });\n  return res;\n};\n\nexport const getOneCertificate = async (id) => {\n  const db = getFirestore();\n  const result = await getDocs(\n    collection(db, \"certificates\"),\n    where(\"id\", \"==\", id)\n  );\n  let res = [];\n  result.forEach((cert) => {\n    if (cert.id === id) {\n      let temp = {\n        id: cert.id,\n        data: cert.data(),\n      };\n      res.push(temp);\n    }\n  });\n  return res;\n};\n\nexport const approveRequest = async (\n  certId,\n  requestId,\n  isApproved,\n  changes = {}\n) => {\n  const db = getFirestore();\n  const docRef = await doc(db, \"changes_requested\", requestId);\n  const result = updateDoc(docRef, {\n    waiting_for_approval: false,\n    is_approved: isApproved,\n  });\n\n  if (isApproved) {\n    const docRef2 = await doc(db, \"certificates\", certId);\n    const result2 = updateDoc(docRef2, {\n      receiverName: changes.newName,\n      receiverEmail: changes.newEmail,\n    });\n  }\n  return result;\n};\n\nexport const getHederaFile = async (id) => {\n  const HederaClient = Client.forTestnet();\n  HederaClient.setOperator(process.env.OPERATOR_ID, process.env.OPERATOR_KEY);\n\n  const query = new FileContentsQuery().setFileId(id);\n  const contents = await query.execute(HederaClient);\n  return contents;\n};\n","import React from 'react'\nimport { Image, Transformer } from 'react-konva'\n\nconst DynamicImage = ({ shapeProps, isSelected, onClick, onChange, item }) => {\n\n    const shapeRef = React.useRef()\n    const trRef = React.useRef()\n\n    React.useEffect(() => {\n        if (isSelected) {\n            // we need to attach transformer manually\n            trRef.current.nodes([shapeRef.current])\n            trRef.current.getLayer().batchDraw()\n        }\n    }, [isSelected])\n\n    return (\n        <React.Fragment>\n            <Image\n                key={item.id}\n                image={item.src}\n                onClick={onClick}\n                onTap={onClick}\n                ref={shapeRef}\n                {...shapeProps}\n                draggable\n                onDragEnd={(e) => {\n                    onChange({\n                        ...shapeProps,\n                        x: e.target.x(),\n                        y: e.target.y(),\n                    })\n                }}\n                onTransformEnd={(e) => {\n                    // transformer is changing scale of the node\n                    // and NOT its width or height\n                    // but in the store we have only width and height\n                    // to match the data better we will reset scale on transform end\n                    const node = shapeRef.current\n                    const scaleX = node.scaleX()\n                    const scaleY = node.scaleY()\n\n                    // we will reset it back\n                    node.scaleX(1)\n                    node.scaleY(1)\n                    onChange({\n                        ...shapeProps,\n                        x: node.x(),\n                        y: node.y(),\n                        // set minimal value\n                        width: Math.max(5, node.width() * scaleX),\n                        height: Math.max(node.height() * scaleY),\n                    })\n                }}\n            />\n            {isSelected && (\n                <Transformer\n                    ref={trRef}\n                    boundBoxFunc={(oldBox, newBox) => {\n                        // limit resize\n                        if (newBox.width < 5 || newBox.height < 5) {\n                            return oldBox\n                        }\n                        return newBox\n                    }}\n                />\n            )}\n        </React.Fragment>\n    )\n}\nexport default DynamicImage","import React, { useEffect, useContext, useRef, useState } from 'react'\nimport { Stage, Layer, Image, Text, Group, Rect } from 'react-konva';\nimport Context from '../../store/context';\nimport { templateActions } from '../../store'\nimport DynamicImage from './resizeable';\n\nfunction Canvas() {\n\n    const { store, dispatch } = useContext(Context)\n    const stageRef = useRef(null)\n    const textRef = useRef(null)\n    const items = store.templates.currentTemplate.canvas.items\n    const activeItem = store.templates.currentTemplate.canvas.activeItem\n    const width = items.find(item => item.type === 'base-image')['original-width']\n    const height = items.find(item => item.type === 'base-image')['original-height']\n    const ratio = width / height\n    const drag = (e, id) => {\n        let items_ = [...items]\n        let x = e.target._lastPos.x\n        let y = e.target._lastPos.y\n        x = e.target.x()\n        y = e.target.y()\n        items_.map(item => {\n            if (item.id === id) {\n                item.x = x\n                item.y = y\n            }\n            return item\n        })\n        dispatch(templateActions.editCanvas(items))\n    }\n\n    const setActiveItem = item => {\n        dispatch(templateActions.setActiveItem({ id: 'none' }))\n        dispatch(templateActions.setActiveItem(item))\n        console.log(items)\n\n    }\n\n    function downloadURI() {\n        if (stageRef) {\n            let uri = stageRef.current.toDataURL({\n                pixelRatio: 1,\n            })\n            let name = \"ex.png\"\n            let link = document.createElement('a');\n            link.download = name;\n            link.href = uri;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            link = null\n        } else {\n            alert(\"Please create a stageRef first\")\n        }\n    }\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"cemter\",\n            alignItems: \"center\",\n            padding: \"3px\"\n        }}>\n            <button onClick={downloadURI}>Download</button>\n            <div style={{ border: \"4px solid red\" }}>\n                <Stage\n                    ref={stageRef}\n                    width={window.innerHeight * 0.8 * ratio}\n                    height={window.innerHeight * 0.8}\n                    scaleX={window.innerHeight * 0.8 * ratio / width}\n                    scaleY={window.innerHeight * 0.8 / height}\n\n                >\n                    <Layer>\n                        {items.map((item, i) => {\n                            switch (item.type) {\n                                case 'base-image':\n                                    return <Image\n                                        key={i}\n                                        image={item.src}\n                                        onClick={() => setActiveItem(item)}\n                                        x={0}\n                                        y={0}\n                                        width={width}\n                                        height={height}\n                                        src={item.src}\n                                    />\n                                case 'image':\n                                    return <DynamicImage\n                                        x={item.x}\n                                        y={item.y}\n                                        src={item.src}\n                                        item={item}\n                                        key={i}\n                                        image={item.src}\n                                        shapeProps={item}\n                                        draggable\n                                        isSelected={item.id === activeItem.id}\n                                        onClick={() => setActiveItem(item)}\n                                        onChange={newAttrs => {\n                                            let p = items\n                                            p[i] = { ...p[i], ...newAttrs, width: newAttrs.width, height: newAttrs.height }\n                                            dispatch(templateActions.editCanvas(p));\n                                            console.log(p[i])\n                                        }}\n                                        onDragEnd={e => drag(e, item.id)}\n                                        onDragMove={e => {\n                                            e.target.y(Math.max(e.target.y(), 0))\n                                            e.target.x(Math.max(e.target.x(), 0))\n                                        }}\n                                    />\n\n                                case 'text':\n                                    return <Group\n                                        x={item.x}\n                                        y={item.y}\n                                        draggable\n                                        onDragEnd={e => drag(e, item.id)}\n                                        onDragMove={e => {\n                                            e.target.y(Math.max(e.target.y(), 0))\n                                            e.target.x(Math.max(e.target.x(), 0))\n                                        }}\n                                        onClick={() => setActiveItem(item)}\n                                        key={i}\n                                        ref={textRef}\n                                    >\n                                        <Text\n                                            fill={item.color || item.fill}\n                                            text={item.value}\n                                            {...item.attr}\n                                            textDecoration={item.id === activeItem.id ? 'underline' : ''}\n                                        >\n                                        </Text>\n                                        {item.id === activeItem.id ?\n                                            <Rect\n\n                                            /> : null}\n                                    </Group>\n                                default:\n                                    return null\n\n                            }\n                        })\n                        }\n                    </Layer>\n                </Stage >\n            </div>\n        </div>\n    )\n}\n\nexport default Canvas\n","import { useContext, useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport { templateActions } from '../../store'\nimport Context from '../../store/context'\n\nconst ItemTypes = {\n    CARD: 'card'\n}\nconst style = {\n    border: '1px solid gray',\n    padding: '0.5rem 1rem',\n    marginBottom: '.5rem',\n    backgroundColor: 'white',\n    cursor: 'pointer',\n    fontWeight: 'bold'\n}\nexport const Card = ({ id, index, moveCard, item }) => {\n\n    const { store, dispatch } = useContext(Context)\n    const ref = useRef(null)\n    const [{ handlerId }, drop] = useDrop({\n        accept: ItemTypes.CARD,\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            }\n        },\n        hover(item, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = item.index\n            const hoverIndex = index\n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return\n            }\n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect()\n            // Get vertical middle\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset()\n            // Get pixels to the top\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top\n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return\n            }\n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return\n            }\n            // Time to actually perform the action\n            moveCard(dragIndex, hoverIndex)\n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex\n        },\n    })\n    const [{ isDragging }, drag] = useDrag({\n        type: ItemTypes.CARD,\n        item: () => {\n            return { id, index }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n\n    const setActiveItem = item => {\n        dispatch(templateActions.setActiveItem(item))\n    }\n\n    const opacity = isDragging ? 0 : 1\n    drag(drop(ref))\n    return (\n        <div ref={ref}\n            style={{ ...style, opacity, border: `2px solid ${store.templates.currentTemplate.canvas.activeItem.id === item.id ? '#e95' : 'grey'}` }}\n            data-handler-id={handlerId}\n            onClick={() => setActiveItem(item)}>\n            {item.value || item.name}\n        </div>\n    )\n}\n","import { useState, useCallback, useContext } from 'react'\nimport { Card } from './card'\nimport update from 'immutability-helper'\nimport Context from '../../store/context'\nimport { templateActions } from '../../store'\nconst style = {\n    width: '80%',\n    margin: \"3px\",\n    display: 'flex',\n    flexDirection: 'column-reverse',\n\n\n}\nexport const Container = () => {\n    {\n        const { store, dispatch } = useContext(Context)\n        const moveCard = useCallback((dragIndex, hoverIndex) => {\n            const dragCard = store.templates.currentTemplate.canvas.items[dragIndex]\n            dispatch(templateActions.editCanvas((update(store.templates.currentTemplate.canvas.items, {\n                $splice: [\n                    [dragIndex, 1],\n                    [hoverIndex, 0, dragCard],\n                ],\n            }))))\n            console.log(\"DRAG INDEX\", store.templates.currentTemplate.canvas.items[dragIndex])\n        }, [store.templates.currentTemplate.canvas.items])\n        const renderCard = (item, index) => {\n            return (\n                <Card\n                    key={index}\n                    index={index}\n                    id={item.id}\n                    item={item}\n                    text={item.name}\n                    moveCard={moveCard} />)\n        }\n\n        return (<>\n            <div style={style}>{store.templates.currentTemplate.canvas.items.map((item, i) => renderCard(item, i))}</div>\n        </>)\n    }\n}\n","import axios from 'axios'\n\nexport const loadFonts = async (sort) => {\n    let url = 'https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyBaX8tNR8l6g596VD30jXrb8sqcIay1OQg'\n    url = `${url}&sort=${sort}`\n    let res = await axios.get(url)\n    return res.data.items\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport Context from '../../store/context';\nimport { templateActions } from '../../store'\nimport FontPicker from \"font-picker-react\";\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { Container } from './cardContainer';\nimport * as api from '../../api/templates';\nimport { loadFirst100Fonts, loadFonts } from './fontLoader';\n\n\nfunction CanvasItems() {\n    const { store, dispatch } = useContext(Context)\n    const [image, setImageState] = useState()\n    const [imageBlob, setImageBlob] = useState()\n    const [numberOfFonts, setNumberOfFonts] = useState(25)\n    const items = store.templates.currentTemplate.canvas.items\n    const activeItem = store.templates.currentTemplate.canvas.activeItem\n\n    const setImage = async src => {\n        let im = new window.Image()\n        im.src = src\n        let oldWidth = im.width\n        let newWidth = window.innerHeight / 4\n        let ratio = oldWidth / newWidth\n        im.width = newWidth\n        im.height = im.height / ratio\n        const id = makeid()\n        const ref = `${store.user.uid}/${store.templates.currentTemplate.id}/${id}_${imageBlob.name}`\n        console.log(ref)\n        await api.uploadImage(imageBlob, ref)\n        let p = [...items]\n        p = p.map(item => {\n            if (item.id === activeItem.id) {\n                item['height'] = im.height\n                item['width'] = im.width\n                item['src'] = im\n                item['storageRef'] = ref\n            }\n            return item\n        })\n        dispatch(templateActions.editCanvas(p))\n        setImageState(null)\n        setImageBlob(null)\n    }\n\n    const setBaseImage = async src => {\n        let im = new window.Image()\n        im.src = src\n        const id = makeid()\n        const ref = `${store.user.uid}/${store.templates.currentTemplate.id}/${imageBlob.name}_${id}.jpg`\n        await api.uploadImage(imageBlob, ref)\n        let p = [...items]\n        p = p.map(item => {\n            if (item.id === activeItem.id) {\n                item['height'] = im.height\n                item['width'] = im.width\n                item['src'] = im\n                item['storageRef'] = ref\n            }\n            return item\n        })\n        dispatch(templateActions.editCanvas(p))\n        setImageState(null)\n        setImageBlob(null)\n    }\n\n    const addText = () => {\n        dispatch(templateActions.createTextItem('text'))\n\n    }\n\n    const addImg = async () => {\n        api.addImg().then(res => {\n            dispatch(templateActions.createImageItem(res))\n        })\n    }\n\n    const editActiveItem = (e, val) => {\n        switch (val) {\n            case 'val':\n                {\n                    let p = items\n                    p.map(item => {\n                        if (item.id === activeItem.id) {\n                            item.value = e.target.value\n                            item.name = e.target.value\n                        }\n                        return null\n                    })\n                    dispatch(templateActions.editCanvas(p))\n\n                    break\n                }\n            case 'img':\n                {\n                    let p = items\n                    p.map(item => {\n                        if (item.id === activeItem.id) {\n                            item.name = e.target.value\n                        }\n                        return null\n                    })\n                    dispatch(templateActions.editCanvas(p))\n                    break\n                }\n            case 'check':\n                {\n                    let p = items\n                    p.map(item => {\n                        if (item.id === activeItem.id) {\n                            item['isConstant'] = e.target.checked\n                        }\n                        return null\n                    })\n                    dispatch(templateActions.editCanvas(p))\n                    break;\n                }\n\n            default:\n                break\n        }\n    }\n\n    const onChangeImg = file => {\n        let reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onloadend = () => {\n            setImageState(reader.result)\n        }\n        setImageBlob(file)\n    }\n    // deleteActiveItem function\n    const deleteActiveItem = () => {\n        let p = [...items]\n        let x = p.filter(item => item.id !== activeItem.id)\n        dispatch(templateActions.editCanvas(x))\n        dispatch(templateActions.setActiveItem({ id: 'none' }))\n    }\n    const saveCanvas = () => {\n        api.editTemplateItems(store.templates.currentTemplate.id, store.templates.currentTemplate.canvas.items).then(() =>\n            window.location.reload())\n    }\n    const deleteTemplate = () => {\n        api.deleteTemplate(store.templates.currentTemplate.id).then(() => window.location.reload())\n    }\n\n    return (\n        <div\n            onKeyDown={(e) => {\n                if (e.key == 'Delete') {\n                    deleteActiveItem()\n                }\n            }}\n\n            style={{ margin: '8px' }}>\n\n            <h3>Canvas</h3>\n            <DndProvider backend={HTML5Backend}>\n                <Container />\n            </DndProvider>\n            <hr />\n            <div>Add Item </div>\n            <div style={{ marginTop: \"5px\" }}><button onClick={addText}>Add text</button></div>\n            <div style={{ marginTop: \"5px\" }}><button onClick={addImg} >Add Img</button></div>\n            <hr />\n            <h4>Edit Item: {activeItem.name}</h4>\n            {\n                activeItem.type !== 'base-image' ?\n                    <div>\n                        Is this field constant?\n                        <input type='checkbox' defaultChecked={activeItem.isConstant || true} onChange={(e) => editActiveItem(e, 'check')} />\n                    </div>\n                    : null\n            }\n            {\n                activeItem.type === 'text' ?\n                    <div style={{ marginTop: \"5px\" }}>Name of field\n                        <div>\n                            <input style={{ padding: \"5px\" }} defaultValue={activeItem.name}\n                                onChange={(e) => editActiveItem(e, 'val')}\n                            />\n                        </div>\n                        <div style={{ marginTop: \"9px\" }}>Text Color :\n                            <input type=\"color\" defaultValue={activeItem.color}\n                                onChangeCapture={(e) => {\n                                    let p = [...items]\n                                    p.map(item => {\n                                        if (item.id === activeItem.id) {\n                                            item['fill'] = e.target.value\n                                            item['color'] = e.target.value\n                                        }\n                                        return item\n                                    })\n                                    dispatch(templateActions.editCanvas(p))\n                                }}\n                            //onChangeCapture\n                            />\n                        </div>\n                        <div style={{ marginTop: \"5px\" }}>Font Size :\n                            <input type=\"number\" defaultValue={activeItem.attr.fontSize || 25}\n                                onChange={\n                                    (e) => {\n                                        let p = [...items]\n                                        p.map(item => {\n                                            if (item.id === activeItem.id) {\n                                                item['attr']['fontSize'] = e.target.value\n                                            }\n                                            return item\n                                        })\n                                        dispatch(templateActions.editCanvas(p))\n                                    }}\n                            />\n                        </div>\n                        <div style={{ overflow: \"hidden\" }}>Font Family :\n                            <ul style={{ height: \"200px\", overflow: \"auto\", paddingRight: \"16px\" }}>\n                                {\n                                    store.templates.fonts.slice(0, numberOfFonts).map((font, i) => {\n                                        return <li\n                                            key={i}\n                                            style={{ fontFamily: font.family }}\n                                            onChange={(e) => { }}\n                                            onClick={() => {\n                                                let p = [...items]\n                                                p.map(item => {\n                                                    if (item.id === activeItem.id) {\n                                                        item['attr'] = {\n                                                            ...item.attr,\n                                                            fontFamily: font.family,\n                                                            fileLink: font.files.regular\n                                                        }\n                                                    }\n                                                    return item\n                                                })\n                                                dispatch(templateActions.editCanvas(p))\n\n                                            }}\n\n                                        >\n                                            {font.family}\n                                        </li>\n                                    })\n                                }\n                            </ul>\n                            <div>\n                                <button onClick={() => setNumberOfFonts(prev => prev + 25)}>Load more fonts</button>\n                            </div>\n                        </div>\n                    </div> : null\n            }\n\n            {\n                activeItem.type === 'base-image' ?\n                    <div style={{ border: \"2px solid black\", padding: \"10px\", marginTop: \"5px\", width: \"90%\" }}>\n                        <div>Change Image</div>\n                        <input type='file' onChange={(e) => onChangeImg(e.target.files[0])} />\n                        {image ? <img height='80' src={image} /> : null}\n                        <div>\n                            {image ? <button onClick={() => setBaseImage(image)}>Set image</button> : null}\n                        </div>\n                    </div> : null\n            }\n            {\n                activeItem.type === 'image' ?\n\n                    <div>\n                        <div>Image name\n                            <input style={{ padding: \"5px\" }} defaultValue={activeItem.name}\n                                onChange={(e) => editActiveItem(e, 'img')}\n                            />\n                        </div>\n                        <div style={{ border: \"2px solid blue\", padding: \"5px\", margin: \"5px\", width: \"70%\" }}>\n                            <input type='file' onChange={(e) => onChangeImg(e.target.files[0])} />\n                            {image ? <img height='80' src={image} /> : null}\n                            <div>\n                                <button onClick={() => setImage(image)}>Set image</button>\n                            </div>\n                        </div>\n                    </div> : null\n            } {\n                activeItem.type !== 'base-image' ?\n                    <div><button onClick={deleteActiveItem}>Delete</button></div> : null\n            }\n            {\n                //deselect activeitem button\n                <div><button onClick={() => dispatch(templateActions.setActiveItem({ id: 'none' }))}>Deselect</button></div>\n            }\n\n            <button\n                onClick={saveCanvas}\n            >\n                Save Template\n            </button>\n            <button\n                onClick={deleteTemplate}\n            >\n                Delete Template\n            </button>\n\n        </div >\n    )\n}\n\nexport default CanvasItems\n\nconst makeid = () => {\n    let length = 12\n    let result = ''\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    let charactersLength = characters.length\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() *\n            charactersLength))\n    }\n    return result\n}","import React, { useEffect, useState, useContext } from \"react\";\nimport Canvas from \"./canvas\";\nimport CanvasItems from \"./canvasItems\";\nimport Context from \"../../store/context.js\";\n\nfunction BuilderContainer() {\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n            // width: window.innerWidth * 0.79,\n            // height: window.innerHeight * 0.89,\n            width: \"79%\",\n            height: \"89%\",\n            margin: \"10px\",\n            border: \"2px solid #555\",\n          }}\n        >\n          <Canvas />\n        </div>\n        <div\n          style={{\n            paddingLeft: \"5px\",\n            // width: window.innerWidth * 0.21,\n            // height: window.innerHeight * 0.89,\n            width: \"21%\",\n            height: \"89%\",\n            margin: \"10px\",\n            border: \"2px solid #222\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <CanvasItems width={\"20%\"} height={\"80%\"} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BuilderContainer;\n","import { getURL } from \"../api/templates\"\nimport { getStorage, getDownloadURL, uploadBytes, deleteObject, ref } from \"firebase/storage\";\n\nconst getCurrentTemplateImageItems = items => {\n    let promises = []\n    for (let it in items) {\n        let item = items[it]\n        if (item.type === 'base-image' || item.type === 'image') {\n            promises.push(getImageItemWithSourceUrl(item))\n        }\n    }\n    return Promise.all(promises)\n}\n\nconst getImageItemWithSourceUrl = item => {\n    let im = new Image()\n    im.crossOrigin = \"anonymous\"\n    let storageRef = item.storageRef\n    console.log(storageRef)\n    return new Promise((resolve, reject) => {\n        if (storageRef) {\n            let imgRef = ref(getStorage(), storageRef)\n            getURL(imgRef)\n                .then(url => {\n                    im.src = url\n                    im.onload = () => {\n                        item['src'] = im\n                        item['original-width'] = im.width\n                        item['original-height'] = im.height\n                        resolve(item)\n                    }\n                }).catch(err => {\n                    reject(err)\n                })\n        }\n    })\n}\n\nexport default getCurrentTemplateImageItems","import React, { useEffect, useState, useContext } from \"react\";\nimport \"../App.css\";\nimport Context from \"../store/context.js\";\nimport * as api from \"../api/templates\";\nimport { templateActions, setLoading as setAppLoading } from \"../store\";\nimport CanvasContainer from \"./builder/canvasContainer\";\nimport { loadFonts } from \"./builder/fontLoader\";\nimport getCurrentTemplate from \"./getCurrentTemplate\";\n\nfunction Template() {\n  const { store, dispatch } = useContext(Context);\n  const [loading, setloading] = useState({\n    fonts: false,\n    templates: true,\n    currentTemplate: false,\n  });\n  const user = store.user;\n\n  useEffect(() => {\n    if (loading.fonts || loading.templates || loading.currentTemplate)\n      dispatch(setAppLoading(true));\n    else dispatch(setAppLoading(false));\n    console.log(\"Loadingxrw:\", loading);\n  }, [loading]);\n\n  useEffect(() => {\n    getUploadedTemplates().then(() =>\n      setloading({ ...loading, templates: false })\n    );\n    loadFonts(\"popularity\")\n      .then((fonts) => {\n        fonts = fonts.slice(0, 100);\n        for (let i in fonts) {\n          let apiUrl = [];\n          apiUrl.push(\"https://fonts.googleapis.com/css?family=\");\n          apiUrl.push(fonts[i].family.replace(/ /g, \"+\"));\n          var url = apiUrl.join(\"\");\n          let style = document.createElement(\"link\");\n          style.href = url;\n          style.rel = \"stylesheet\";\n          //console.log(\"Styleee:\", style)\n          document.head.appendChild(style);\n        }\n        dispatch(templateActions.setFonts(fonts));\n        setloading({ ...loading, fonts: false });\n      })\n      .catch((err) => {\n        setloading({ ...loading, fonts: false });\n        console.log(err);\n      })\n      .finally(() => setloading({ ...loading, fonts: false }));\n  }, []);\n\n  const createTemplate = async () => {\n    const info = {\n      uid: user.uid,\n      name: \"New Template\" + Math.floor(Math.random() * 100),\n      description: \"New Template test\",\n    };\n    const res = await api.createTemplate(info);\n    console.log(res);\n    window.location.reload();\n  };\n\n  const getUploadedTemplates = () => {\n    setloading({ ...loading, templates: true });\n    return new Promise((resolve, reject) => {\n      console.log(\"UID in templates\", store.user.uid);\n      api.getTemplates(store.user.uid).then((res) => {\n        dispatch(templateActions.setUserTemplates(res));\n        console.log(\"Get templates():\", res);\n        setloading({ ...loading, templates: false });\n        resolve();\n      });\n    });\n  };\n\n  const setCurrentTemplate = (srcTemplate) => {\n    dispatch(\n      templateActions.setCurrentTemplate({\n        id: null,\n        canvas: { items: [], rev: [] },\n      })\n    );\n    setloading({ ...loading, currentTemplate: true });\n    let { id, data } = srcTemplate;\n    getCurrentTemplate(data.canvas.items).then((res) => {\n      for (let i in res) {\n        let imgItem = res[i];\n        data.canvas.items.map((item) => {\n          if (item.id === imgItem.id) return imgItem;\n          else return item;\n        });\n      }\n      let template = {\n        id,\n        ...data,\n        canvas: {\n          ...data.canvas,\n          items: data.canvas.items,\n          activeItem: data.canvas.items[0],\n        },\n      };\n      dispatch(templateActions.setCurrentTemplate(template));\n      console.log(store.templates);\n      setloading({ ...loading, currentTemplate: false });\n    });\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"90%\", display: \"flex\" }}>\n      <div\n        style={{\n          width: \"15%\",\n          borderRight: \"2px solid #BED7E1\",\n          overflowY: \"scroll\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          className=\"button button1\"\n          onClick={createTemplate}\n          style={{ border: \"2px solid #BED7E1\", margin: \"5px 10px\" }}\n        >\n          Create Template\n        </div>\n        <span\n          style={{\n            marginLeft: 10,\n            fontFamily: \"monospace\",\n            fontSize: 18,\n            fontWeight: \"bold\",\n            color: \"gray\",\n          }}\n        >\n          Existing Templates:\n        </span>\n        {store.templates.userTemplates.map((template, i) => {\n          return (\n            <div\n              key={i}\n              className=\"button button1\"\n              style={{\n                margin: \"4px auto\",\n                marginLeft: 10,\n              }}\n              onClick={() => setCurrentTemplate(template)}\n            >\n              {template.data.name}\n            </div>\n          );\n        })}\n      </div>\n      <div style={{ width: \"85%\", display: \"flex\" }}>\n        {store.app.isLoading ? (\n          <div\n            style={{\n              margin: \"auto\",\n              fontFamily: \"monospace\",\n              fontSize: 20,\n              color: \"gray\",\n            }}\n          >\n            Loading...\n          </div>\n        ) : (\n          <>\n            {store.templates.currentTemplate.id ? (\n              <CanvasContainer />\n            ) : (\n              <div\n                style={{\n                  fontFamily: \"monospace\",\n                  fontSize: 20,\n                  color: \"gray\",\n                }}\n              >\n                No Template Selected\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Template;\n","import { initializeApp } from \"firebase/app\";\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst firebaseConfig = {\n\n    apiKey: \"AIzaSyCp_G1gLGTutTUvds1V5jtuDugQivDygLA\",\n  \n    authDomain: \"kct-final-year.firebaseapp.com\",\n  \n    projectId: \"kct-final-year\",\n  \n    storageBucket: \"kct-final-year.appspot.com\",\n  \n    messagingSenderId: \"673266487343\",\n  \n    appId: \"1:673266487343:web:288379096bc1af713376da\"\n  \n  };\n  \n\nexport const app = initializeApp(firebaseConfig);\n\n// TODO: change url to env var\nexport const env = {\n    url: process.env.REACT_APP_URL\n}","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport \"../App.css\";\nimport * as api from \"../api/templates\";\nimport Context from \"../store/context.js\";\nimport { env } from \"../config.js\";\nfunction Certificate() {\n  const { store } = React.useContext(Context);\n  const [currentCertificate, setCurrentCertificate] = useState(null);\n  const [certificates, setCertificates] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [fields, setfields] = useState({});\n  const [selectedTemplateId, setSelectedTemplateId] = useState(null);\n  const [receiverName, setReceiverName] = useState(null);\n  const [selectedTemplateName, setSelectedTemplateName] = useState(\"\");\n  const [email, setEmail] = useState(null);\n  const [college, setCollege] = useState(null);\n  const [batch, setBatch] = useState(null);\n  const [degree, setDegree] = useState(null);\n  const [department, setDepartment] = useState(null);\n  const [rollNo, setRollNo] = useState(null);\n\n  const labelStyles = {\n    marginRight: 10,\n    fontFamily: \"monospace\",\n    fontSize: 16,\n  };\n\n  const mandatoryFields = [\n    {\n      fieldName: \"Recipient Name\",\n      onChangeFunc: (event) => {\n        setReceiverName(event.target.value);\n      },\n      placeHolder: \"Name\",\n    },\n    {\n      fieldName: \"Email\",\n      onChangeFunc: (event) => {\n        setEmail(event.target.value);\n      },\n      placeHolder: \"Email ID\",\n    },\n    {\n      fieldName: \"College\",\n      onChangeFunc: (event) => {\n        setCollege(event.target.value);\n      },\n      placeHolder: \"College Name\",\n    },\n    {\n      fieldName: \"Batch\",\n      onChangeFunc: (event) => {\n        setBatch(event.target.value);\n      },\n      placeHolder: \"Batch (eg:2018-2022)\",\n    },\n    {\n      fieldName: \"Degree\",\n      onChangeFunc: (event) => {\n        setDegree(event.target.value);\n      },\n      placeHolder: \"Degree Name\",\n    },\n    {\n      fieldName: \"Department\",\n      onChangeFunc: (event) => {\n        setDepartment(event.target.value);\n      },\n      placeHolder: \"Department Name\",\n    },\n    {\n      fieldName: \"Roll No\",\n      onChangeFunc: (event) => {\n        setRollNo(event.target.value);\n      },\n      placeHolder: \"Student ID\",\n    },\n  ];\n\n  const createCertificate = (e) => {\n    e.preventDefault();\n    console.log(selectedTemplateId);\n    let req = {\n      uid: store.user.uid,\n      templateId: selectedTemplateId,\n      receiverName,\n      receiverEmail: email,\n      fields: fields,\n      isShareable: true,\n      college,\n      batch,\n      degree,\n      department,\n      rollNo,\n    };\n    let urls = `${env.url}/certificate/one`;\n    console.log(urls);\n    axios\n      .post(urls, req)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(\"Error:\", err);\n      });\n  };\n\n  useEffect(() => {\n    api.getCertificates(store.user.uid).then((res) => {\n      console.log(\"certificates\");\n      console.log(res.data);\n      setCertificates(res);\n    });\n  }, []);\n\n  const resetSelectedCertificateData = () => {\n    setSelectedTemplate(null);\n    setfields({});\n    setSelectedTemplateId(null);\n    setReceiverName(null);\n    setEmail(null);\n    setSelectedTemplateName(\"\");\n  };\n\n  const getTemplates = () => {\n    api.getTemplates(store.user.uid).then((res) => {\n      setTemplates(res);\n    });\n    resetSelectedCertificateData();\n    setCurrentCertificate(null);\n  };\n\n  const setCurrentCertificateFunc = (cert) => {\n    let imgRef = ref(getStorage(), `/certificates/${cert.data.name}`);\n    getDownloadURL(imgRef).then((url) => {\n      setCurrentCertificate({ cert, url });\n    });\n    setTemplates([]);\n    resetSelectedCertificateData();\n  };\n\n  const setSelectedTemplateFunc = (id) => {\n    let url = `${env.url}/template/fields/${id}`;\n    console.log(url);\n    axios.get(url).then((res) => {\n      setSelectedTemplate(res.data);\n    });\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"90%\", display: \"flex\" }}>\n      <div\n        style={{\n          width: \"20%\",\n          borderRight: \"2px solid #BED7E1\",\n          overflowY: \"scroll\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          className=\"button button1\"\n          onClick={getTemplates}\n          style={{ border: \"2px solid #BED7E1\", margin: \"5px 10px\" }}\n        >\n          Create certificate from template\n        </div>\n        <span\n          style={{\n            marginLeft: 10,\n            fontFamily: \"monospace\",\n            fontSize: 18,\n            fontWeight: \"bold\",\n            color: \"gray\",\n          }}\n        >\n          Issued Certificates:\n        </span>\n        {certificates.map((cert) => {\n          return (\n            <div\n              className=\"button button1\"\n              key={cert.id}\n              style={{\n                width: 200,\n                margin: \"4px auto\",\n                marginLeft: 10,\n              }}\n              onClick={() => {\n                setCurrentCertificateFunc(cert);\n              }}\n            >\n              {cert.data.receiverName}\n            </div>\n          );\n        })}\n      </div>\n      <div\n        style={{\n          width: \"80%\",\n          display: \"flex\",\n          overflowY: \"scroll\",\n          fontSize: 14,\n        }}\n      >\n        <div style={{ margin: 30 }}>\n          {currentCertificate && (\n            <div style={{ margin: \"auto\", fontFamily: \"monospace\" }}>\n              <img\n                height={window.innerHeight * 0.7}\n                src={currentCertificate.url}\n                alt=\"certificate\"\n              />\n              <div\n                style={{\n                  textDecoration: \"underline\",\n                  color: \"blue\",\n                  cursor: \"pointer\",\n                  marginBottom: 5,\n                }}\n                onClick={() => {\n                  navigator.clipboard.writeText(\n                    `${process.env.REACT_APP_URL}/view_certificate/${currentCertificate.cert.data.name}`\n                  );\n                  alert(\"Copied link to clipboard\");\n                }}\n              >{`${process.env.REACT_APP_URL}/view_certificate/${currentCertificate.cert.data.name}`}</div>\n              <div style={{ marginBottom: 5 }}>\n                Hedera FilleId: {currentCertificate.cert.data.hederaFileId}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                Name:{currentCertificate.cert.data.receiverName}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                Email:{currentCertificate.cert.data.receiverEmail}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                College:{currentCertificate.cert.data.college}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                Batch:{currentCertificate.cert.data.batch}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                Degree:{currentCertificate.cert.data.degree}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                Department:{currentCertificate.cert.data.department}\n              </div>\n              <div style={{ marginBottom: 5 }}>\n                Roll No:{currentCertificate.cert.data.rollNo}\n              </div>\n            </div>\n          )}\n          <div>\n            {templates.length > 0 && (\n              <>\n                <span\n                  style={{\n                    fontFamily: \"monospace\",\n                    fontSize: 28,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Templates:\n                </span>\n                {templates.map((template) => {\n                  return (\n                    <div\n                      key={template.id}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        height: 70,\n                      }}\n                    >\n                      <div\n                        style={{\n                          fontSize: 20,\n                          fontFamily: \"monospace\",\n                          color: \"gray\",\n                          margin: \"auto 10px\",\n                        }}\n                      >\n                        {template.data.name}\n                      </div>\n                      <div\n                        className=\"button button1\"\n                        style={{\n                          margin: \"auto 10px\",\n                          border: \"1px solid #BED7E1\",\n                        }}\n                        onClick={() => {\n                          setSelectedTemplateName(template.data.name);\n                          setSelectedTemplateId(template.id);\n                          setSelectedTemplateFunc(template.id);\n                          setTemplates([]);\n                        }}\n                      >\n                        Create certificate\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            )}\n            {selectedTemplate && (\n              <div>\n                <span\n                  style={{\n                    fontFamily: \"monospace\",\n                    fontSize: 28,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {selectedTemplateName}\n                </span>\n                <form\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    marginTop: 15,\n                  }}\n                >\n                  {mandatoryFields.map((mandatoryField) => {\n                    return (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <label style={labelStyles}>\n                          {mandatoryField.fieldName}\n                        </label>\n                        <input\n                          type=\"text\"\n                          placeholder={mandatoryField.placeHolder}\n                          onChange={(e) => mandatoryField.onChangeFunc(e)}\n                        />\n                      </div>\n                    );\n                  })}\n                  {selectedTemplate.map((field) => {\n                    return (\n                      <div key={field} style={{ marginBottom: 10 }}>\n                        <label\n                          style={{\n                            marginRight: 10,\n                            fontFamily: \"monospace\",\n                            fontSize: 16,\n                          }}\n                        >\n                          {field}\n                        </label>\n                        <input\n                          type=\"text\"\n                          placeholder={field}\n                          onChange={(e) => {\n                            setfields({ ...fields, [field]: e.target.value });\n                          }}\n                        />\n                      </div>\n                    );\n                  })}\n                  <div\n                    className=\"button button1\"\n                    style={{\n                      border: \"2px solid #BED7E1\",\n                      width: 200,\n                      marginLeft: \"auto\",\n                    }}\n                    onClick={(e) => createCertificate(e)}\n                  >\n                    Create certificate\n                  </div>\n                </form>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Certificate;\n","import React, { useEffect, useState } from \"react\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\nimport \"../App.css\";\nimport * as api from \"../api/templates\";\nimport { useParams } from \"react-router-dom\";\nimport Context from \"../store/context.js\";\nimport {\n  getFirestore,\n  getDocs,\n  collection,\n  where,\n  Timestamp,\n} from \"firebase/firestore\";\n\nfunction ViewCertificate() {\n  const { id } = useParams();\n  const { store } = React.useContext(Context);\n  const [certificates, setCertificates] = useState([]);\n  const [currentCertificate, setCurrentCertificate] = useState(null);\n  const [certificateMetaData, setCertificateMetaData] = useState(null);\n  useEffect(() => {\n    console.log(id);\n    api\n      .getCertificates(store.user.uid)\n      .then((res) => {\n        setCertificates(res);\n      })\n      .then((x) => {\n        setCurrentCertificateFunc(id);\n      });\n  }, []);\n\n  useEffect(() => {\n    setCertificateMetaData(certificates.find((x) => x.data.name == id));\n    console.log(certificates);\n  }, [certificates]);\n\n  const setCurrentCertificateFunc = async (cert) => {\n    const db = getFirestore();\n    let imgRef = ref(getStorage(), `/certificates/${cert}`);\n    getDownloadURL(imgRef).then((url) => {\n      setCurrentCertificate({ cert, url });\n    });\n    certificates.length > 0 &&\n      setCertificateMetaData(certificates.find((x) => x.data.name == cert));\n  };\n\n  return (\n    <div style={{ margin: 30, width: \"100%\", height: \"80%\", display: \"flex\" }}>\n      {currentCertificate &&\n        certificateMetaData &&\n        (certificateMetaData.data.isShareable ? (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              margin: \"auto\",\n              fontFamily: \"monospace\",\n              fontSize: 16,\n            }}\n          >\n            <img\n              height={window.innerHeight * 0.7}\n              src={currentCertificate.url}\n              alt=\"certificate\"\n              style={{ margin: \"auto\" }}\n            />\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Hedera File ID:</span>\n              {certificateMetaData.data.hederaFileId}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Recepient Name:</span>\n              {certificateMetaData.data.receiverName}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Recepient Email:</span>\n              {certificateMetaData.data.receiverEmail}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>College:</span>\n              {certificateMetaData.data.college}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Batch:</span>\n              {certificateMetaData.data.batch}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Degree:</span>\n              {certificateMetaData.data.degree}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Department:</span>\n              {certificateMetaData.data.department}\n            </div>\n            <div style={{ margin: \"5px auto\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Roll No:</span>\n              {certificateMetaData.data.rollNo}\n            </div>\n          </div>\n        ) : (\n          <div\n            style={{\n              fontFamily: \"monospace\",\n              margin: \"60px auto\",\n              fontSize: 20,\n              color: \"gray\",\n            }}\n          >\n            Certificate has been prevented from sharing by receiver.\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default ViewCertificate;\n","import React, { useEffect, useState } from \"react\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\nimport \"../App.css\";\nimport * as api from \"../api/templates\";\nimport { useParams } from \"react-router-dom\";\nimport Context from \"../store/context.js\";\nimport {\n  getFirestore,\n  getDocs,\n  collection,\n  where,\n  Timestamp,\n} from \"firebase/firestore\";\n\nfunction RecipientPortal() {\n  const { store } = React.useContext(Context);\n  const [certificates, setCertificates] = useState([]);\n  const [currentCertificate, setCurrentCertificate] = useState(null);\n  const [requestChanges, setRequestChanges] = useState(null);\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [fields, setfields] = useState({});\n  const [selectedTemplateId, setSelectedTemplateId] = useState(null);\n  const [newReceiverName, setNewReceiverName] = useState(null);\n  const [selectedTemplateName, setSelectedTemplateName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(null);\n\n  const labelStyles = {\n    marginRight: 10,\n    fontFamily: \"monospace\",\n    fontSize: 16,\n  };\n\n  const resetRequestChanges = () => {\n    setRequestChanges(null);\n    setNewEmail(null);\n    setNewReceiverName(null);\n  };\n\n  useEffect(() => {\n    api.getMyCertificates(store.user.email).then((res) => {\n      setCertificates(res);\n    });\n  }, []);\n\n  const setCurrentCertificateFunc = async (cert) => {\n    let imgRef = ref(getStorage(), `/certificates/${cert.data.name}`);\n    getDownloadURL(imgRef).then((url) => {\n      setCurrentCertificate({ cert, url });\n    });\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"90%\", display: \"flex\" }}>\n      <div\n        style={{\n          width: \"20%\",\n          borderRight: \"2px solid #BED7E1\",\n          overflowY: \"scroll\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <span\n          style={{\n            marginLeft: 10,\n            fontFamily: \"monospace\",\n            fontSize: 18,\n            fontWeight: \"bold\",\n            color: \"gray\",\n          }}\n        >\n          Issued Certificates:\n        </span>\n        {certificates.map((cert) => {\n          return (\n            <div\n              className=\"button button1\"\n              key={cert.id}\n              style={{\n                width: 200,\n                margin: \"4px auto\",\n                marginLeft: 10,\n              }}\n              onClick={() => {\n                resetRequestChanges();\n                setCurrentCertificateFunc(cert);\n              }}\n            >\n              {cert.data.receiverName}\n            </div>\n          );\n        })}\n      </div>\n      <div style={{ width: \"80%\", display: \"flex\", overFlowY: \"scroll\" }}>\n        <div\n          style={{\n            margin: \"10px 30px\",\n            display: \"flex\",\n            width: \"100%\",\n            height: \"100%\",\n            flexDirection: \"column\",\n          }}\n        >\n          {currentCertificate &&\n            (requestChanges ? (\n              <div style={{ margin: \"30px auto\" }}>\n                <form\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    marginTop: 15,\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <label style={labelStyles}>Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      defaultValue={newReceiverName}\n                      onChange={(e) => {\n                        setNewReceiverName(e.target.value);\n                      }}\n                    />\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    <label style={labelStyles}>Email</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      defaultValue={newEmail}\n                      onChange={(e) => {\n                        setNewEmail(e.target.value);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"button button1\"\n                    style={{\n                      border: \"2px solid #BED7E1\",\n                      width: 100,\n                      marginLeft: \"auto\",\n                    }}\n                    onClick={(e) => {\n                      api.requestChangeInCertificate(\n                        currentCertificate.cert.id,\n                        currentCertificate.cert.data.uid,\n                        { name: newReceiverName, email: newEmail }\n                      );\n                    }}\n                  >\n                    Request\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <>\n                <div\n                  style={{\n                    marginLeft: \"auto\",\n                    marginTop: 20,\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    width: \"100%\",\n                  }}\n                >\n                  <div\n                    style={{\n                      fontFamily: \"monospace\",\n                      textDecoration: \"underline\",\n                      color: \"blue\",\n                      cursor: \"pointer\",\n                      margin: \"auto 0\",\n                    }}\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `${process.env.REACT_APP_URL}/view_certificate/${currentCertificate.cert.data.name}`\n                      );\n                      alert(\"Copied link to clipboard\");\n                    }}\n                  >\n                    {`${process.env.REACT_APP_URL}/view_certificate/${currentCertificate.cert.data.name}`}\n                  </div>\n                  <div>\n                    <div\n                      className=\"button button1\"\n                      style={{\n                        margin: \"auto 5px\",\n                        border: \"1px solid #BED7E1\",\n                      }}\n                      onClick={async () => {\n                        await api.toggleCertificateSharing(\n                          currentCertificate.cert.id,\n                          !currentCertificate.cert.data.isShareable\n                        );\n                        window.location.reload();\n                      }}\n                    >\n                      {currentCertificate.cert.data.isShareable\n                        ? \"Stop sharing\"\n                        : \"Resume Sharing\"}\n                    </div>\n                    <div\n                      className=\"button button1\"\n                      style={{\n                        margin: \"auto 5px\",\n                        border: \"1px solid #BED7E1\",\n                      }}\n                      onClick={() => {\n                        setNewEmail(currentCertificate.cert.data.receiverEmail);\n                        setNewReceiverName(\n                          currentCertificate.cert.data.receiverName\n                        );\n                        setRequestChanges(true);\n                      }}\n                    >\n                      Request Changes\n                    </div>\n                  </div>\n                </div>\n                <div style={{ margin: \"20px auto\" }}>\n                  <img\n                    height={window.innerHeight * 0.7}\n                    src={currentCertificate.url}\n                    alt=\"certificate\"\n                  />\n                </div>\n                <div\n                  style={{\n                    fontFamily: \"monospace\",\n                    fontSize: 14,\n                    margin: \"auto\",\n                  }}\n                >\n                  <div style={{ marginBottom: 5 }}>\n                    Hedera FilleId: {currentCertificate.cert.data.hederaFileId}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Name:{currentCertificate.cert.data.receiverName}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Email:{currentCertificate.cert.data.receiverEmail}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    College:{currentCertificate.cert.data.college}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Batch:{currentCertificate.cert.data.batch}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Degree:{currentCertificate.cert.data.degree}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Department:{currentCertificate.cert.data.department}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Roll No:{currentCertificate.cert.data.rollNo}\n                  </div>\n                </div>\n              </>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipientPortal;\n","import React, { useEffect, useState } from \"react\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\nimport \"../App.css\";\nimport * as api from \"../api/templates\";\nimport { useParams } from \"react-router-dom\";\nimport Context from \"../store/context.js\";\nimport {\n  getFirestore,\n  getDocs,\n  collection,\n  where,\n  Timestamp,\n} from \"firebase/firestore\";\n\nfunction RequestedChanges() {\n  const { store } = React.useContext(Context);\n  const [certificates, setCertificates] = useState([]);\n  const [currentCertificate, setCurrentCertificate] = useState(null);\n  const [existingCertificate, setExistingCertificate] = useState(null);\n\n  const labelStyles = {\n    marginRight: 10,\n    fontFamily: \"monospace\",\n    fontSize: 16,\n  };\n\n  useEffect(() => {\n    api.viewRequestedChanges(store.user.id).then((res) => {\n      setCertificates(res);\n    });\n  }, []);\n\n  const setCurrentCertificateFunc = async (cert) => {\n    api.getOneCertificate(cert.data.certificate_id).then((res) => {\n      setExistingCertificate(\n        res.find((x) => x.id === cert.data.certificate_id)\n      );\n      setCurrentCertificate(cert);\n    });\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"90%\", display: \"flex\" }}>\n      <div\n        style={{\n          width: \"20%\",\n          borderRight: \"2px solid #BED7E1\",\n          overflowY: \"scroll\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <span\n          style={{\n            marginLeft: 10,\n            fontFamily: \"monospace\",\n            fontSize: 18,\n            fontWeight: \"bold\",\n            color: \"gray\",\n          }}\n        >\n          Changes Requested:\n        </span>\n        {certificates.length > 0 &&\n          certificates.map((cert) => {\n            return (\n              <div\n                className=\"button button1\"\n                key={cert.id}\n                style={{\n                  width: 200,\n                  margin: \"4px auto\",\n                  marginLeft: 10,\n                }}\n                onClick={() => {\n                  setCurrentCertificateFunc(cert);\n                }}\n              >\n                {cert.data.certificate_id}\n              </div>\n            );\n          })}\n      </div>\n      <div style={{ width: \"80%\", display: \"flex\" }}>\n        <div\n          style={{\n            margin: \"10px 30px\",\n            display: \"flex\",\n            width: \"100%\",\n            height: \"100%\",\n            flexDirection: \"column\",\n          }}\n        >\n          {currentCertificate && (\n            <div\n              style={{\n                fontFamily: \"monospace\",\n                fontSize: 14,\n                margin: \"20px auto\",\n              }}\n            >\n              <div style={{ marginBottom: 20 }}>\n                <span style={{ fontWeight: \"bold\", fontSize: 20 }}>\n                  New Data\n                </span>\n                <div style={{ marginTop: 10, marginBottom: 5 }}>\n                  New Name: {currentCertificate.data.new_name}\n                </div>\n                <div style={{ marginBottom: 5 }}>\n                  New Email: {currentCertificate.data.new_email}\n                </div>\n              </div>\n              {existingCertificate && (\n                <div>\n                  <span style={{ fontWeight: \"bold\", fontSize: 20 }}>\n                    Existing Data\n                  </span>\n                  <div\n                    style={{\n                      marginTop: 10,\n                      marginBottom: 5,\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Name:{existingCertificate.data.receiverName}\n                  </div>\n                  <div style={{ marginBottom: 5, fontWeight: \"bold\" }}>\n                    Email:{existingCertificate.data.receiverEmail}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Hedera FilleId: {existingCertificate.data.hederaFileId}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    College:{existingCertificate.data.college}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Batch:{existingCertificate.data.batch}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Degree:{existingCertificate.data.degree}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Department:{existingCertificate.data.department}\n                  </div>\n                  <div style={{ marginBottom: 5 }}>\n                    Roll No:{existingCertificate.data.rollNo}\n                  </div>\n                </div>\n              )}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  margintTop: 30,\n                }}\n              >\n                <div\n                  className=\"button button1\"\n                  style={{\n                    margin: \"auto 5px\",\n                    border: \"1px solid #BED7E1\",\n                  }}\n                  onClick={() => {\n                    api.approveRequest(\n                      existingCertificate.id,\n                      currentCertificate.id,\n                      false\n                    );\n                  }}\n                >\n                  Reject\n                </div>\n                <div\n                  className=\"button button1\"\n                  style={{\n                    margin: \"auto 5px\",\n                    border: \"1px solid #BED7E1\",\n                  }}\n                  onClick={() => {\n                    api.approveRequest(\n                      existingCertificate.id,\n                      currentCertificate.id,\n                      true,\n                      {\n                        newName: currentCertificate.data.new_name,\n                        newEmail: currentCertificate.data.new_email,\n                      }\n                    );\n                  }}\n                >\n                  Approve\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RequestedChanges;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"./App.css\";\nimport SignIn from \"./components/auth\";\nimport Template from \"./components/template\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport Certificate from \"./components/certificate.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport CanvasContainer from \"./components/builder/canvasContainer.js\";\nimport Context from \"./store/context\";\nimport { signIn } from \"./store\";\nimport { setLoading } from \"./store\";\nimport ViewCertificate from \"./components/viewCertificate\";\nimport RecipientPortal from \"./components/recipientPortal\";\nimport RequestedChanges from \"./components/requestedChanges\";\n\nfunction App() {\n  const { store, dispatch } = useContext(Context);\n  const auth = getAuth();\n  const [user, setUser] = useState(store.user || null);\n  const [pathname, setPathName] = useState(\"\");\n\n  const toolBarStyles = {\n    margin: \"auto 15px\",\n    color: \"gray\",\n    cursor: \"pointer\",\n    fontFamily: \"monospace\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  };\n\n  useEffect(() => {\n    dispatch(setLoading(true));\n  }, []);\n\n  useEffect(() => {\n    setPathName(window.location.pathname.slice(0, 17));\n  }, [window.location.pathname]);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user_obj) => {\n      if (user_obj) {\n        setUser(user_obj);\n      } else {\n        console.log(\"No user\");\n      }\n    });\n  });\n\n  useEffect(() => {\n    dispatch(signIn(user));\n    console.log(\"UserId from App.js\", user.uid);\n  }, [user]);\n\n  const toolbar = () => {\n    if (pathname === \"/view_certificate\") {\n      return;\n    } else if (pathname === \"/recipient_portal\") {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"50px\",\n            backgroundColor: \"#dfedf2\",\n            boxShadow: \"10px 1px 3px rgba(50, 50, 50, 0.25)\",\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <div\n            style={toolBarStyles}\n            onClick={() => {\n              window.location.replace(\"/signin\");\n            }}\n          >\n            SignIn\n          </div>\n          <div\n            style={toolBarStyles}\n            onClick={() => {\n              window.location.replace(\"/recipient_portal/my_certificates\");\n            }}\n          >\n            My Certificates\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"50px\",\n          backgroundColor: \"#dfedf2\",\n          boxShadow: \"10px 1px 3px rgba(50, 50, 50, 0.25)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <div\n          style={toolBarStyles}\n          onClick={() => {\n            window.location.replace(\"/signin\");\n          }}\n        >\n          SignIn\n        </div>\n        <div\n          style={toolBarStyles}\n          onClick={() => {\n            window.location.replace(\"/certificates\");\n          }}\n        >\n          Certificates\n        </div>\n        <div\n          style={toolBarStyles}\n          onClick={() => {\n            window.location.replace(\"/templates\");\n          }}\n        >\n          Templates\n        </div>\n        <div\n          style={toolBarStyles}\n          onClick={() => {\n            window.location.replace(\"/view_requested_changes\");\n          }}\n        >\n          Change Requests\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"70px\",\n          display: \"flex\",\n          backgroundColor: \"#BED7E1\",\n        }}\n      >\n        <div\n          style={{\n            margin: \"auto auto auto 10px\",\n            color: \"white\",\n            fontFamily: \"monospace\",\n            fontSize: 30,\n            cursor: \"pointer\",\n            padding: \"15px 0\",\n          }}\n          onClick={() => {\n            window.location = \"/signin\";\n          }}\n        >\n          Certify\n        </div>\n      </div>\n      <Router>\n        <Switch>\n          <>\n            {toolbar()}\n            {store.user.uid ? (\n              <>\n                <Route path=\"/signin\" exact>\n                  <SignIn />\n                </Route>\n                <Route path=\"/templates\" exact>\n                  <Template />\n                </Route>\n                <Route path=\"/certificates\" exact>\n                  <Certificate />\n                </Route>\n                <Route path=\"/view_requested_changes\" exact>\n                  <RequestedChanges />\n                </Route>\n                <Route path=\"/view_certificate/:id\" exact>\n                  <ViewCertificate />\n                </Route>\n                <Route path=\"/recipient_portal/my_certificates\" exact>\n                  <RecipientPortal />\n                </Route>\n              </>\n            ) : (\n              <>\n                <SignIn />\n              </>\n            )}\n          </>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { useReducer } from \"react\"\nimport user from \"./auth/reducer\"\nimport templates from \"./templates/reducer\"\n\nconst combineReducers = (slices) => (state, action) =>\n    Object.keys(slices).reduce( // use for..in loop, if you prefer it\n        (acc, prop) => ({\n            ...acc,\n            [prop]: slices[prop](acc[prop], action),\n        }),\n        state\n    )\n\nconst app = (state = { isLoading: false }, action) => {\n    switch (action.type) {\n        case \"SET_LOADING_STATE\":\n            return {\n                ...state,\n                isLoading: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nconst reducers = {\n    app,\n    templates,\n    user,\n}\n\nconst rootReducer = combineReducers(reducers)\n\nexport default rootReducer","import * as types from './types'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n\n        case types.SET_CURRENT_TEMPLATE:\n            return {\n                ...state,\n                currentTemplate: action.payload\n            }\n\n        case types.SET_USER_TEMPLATES:\n            return {\n                ...state,\n                userTemplates: action.payload\n            }\n\n        case types.CREATE_ITEM:\n            return {\n                ...state,\n                currentTemplate: {\n                    ...state.currentTemplate,\n                    canvas: {\n                        ...state.currentTemplate.canvas,\n                        items: [...state.currentTemplate.canvas.items, action.payload],\n                        activeItem: action.payload,\n                    }\n                }\n            }\n        case types.EDIT_CANVAS: {\n            return {\n                ...state,\n                currentTemplate: {\n                    ...state.currentTemplate,\n                    canvas: {\n                        ...state.currentTemplate.canvas,\n                        items: action.payload\n                    }\n                }\n            }\n        }\n        case types.SET_ACTIVE_ITEM:\n            return {\n                ...state,\n                currentTemplate: {\n                    ...state.currentTemplate,\n                    canvas: {\n                        ...state.currentTemplate.canvas,\n                        activeItem: action.payload\n                    }\n                }\n            }\n        case types.SET_STAGE_REF:\n            return {\n                ...state,\n                currentTemplate: {\n                    ...state.currentTemplate,\n                    canvas: {\n                        ...state.currentTemplate.canvas,\n                        stageRef: action.payload\n                    }\n                }\n            }\n        case types.EDIT_WHOLE_CANVAS:\n\n            return {\n                ...state,\n                currentTemplate: {\n                    ...state.currentTemplate,\n                    canvas: {\n                        ...state.currentTemplate.canvas,\n                        ...action.payload,\n                    }\n                }\n            }\n\n        case types.SET_FONTS:\n            return {\n                ...state,\n                fonts: action.payload\n            }\n\n        case types.ADD_FONT:\n            return {\n                ...state,\n                fonts: [...state.fonts, action.payload]\n            }\n\n\n\n        default: return state\n    }\n}\n\nexport default reducer","import { SIGN_IN, SIGN_OUT } from \"./types\"\n\nexport const initialState = {\n    isSignedIn: false,\n    name: null,\n    email: null,\n    photo: null,\n    uid: null,\n    isVerified: null,\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return {\n                ...state,\n                isSignedIn: true,\n                ...action.payload\n            }\n        case SIGN_OUT:\n            return {\n                ...state,\n                isSignedIn: false,\n                user: null\n            }\n        default: return state\n    }\n}\n\nexport default reducer","import { getNewImage, getNewText, baseImage } from './elements'\nconst text = getNewText()\nconst image = getNewImage()\nimage['storageRef'] = 'default_template_images/image.jpg'\nexport const initialState = {\n    userTemplates: [],\n    currentTemplate: {\n        id: null,\n        canvas: {\n            isBaseImageLoaded: false,\n            otherImagesLoaded: false,\n            ratio: \"default\",\n            imageRef: {\n                baseImage: null,\n                otherImages: []\n            },\n            stageRef: null,\n            items: [baseImage, text],\n            activeItem: text,\n        }\n    },\n    fonts: [],\n}\n","import { useReducer } from \"react\"\nimport rootReducer from \"./rootReducer\"\n\nimport { initialState as user } from './auth/reducer'\nimport { initialState as templates } from \"./templates/initialState\"\n\nconst initialState = {\n  app: {\n    isLoading: false,\n  },\n  user,\n  templates,\n}\n\nconst useStore = () => {\n\n  const [store, dispatch] = useReducer(rootReducer, initialState)\n  return { store, dispatch }\n\n}\n\nexport default useStore","import React from \"react\"\nimport useStore from \"./useStore\"\nimport Context from \"./context\"\n\nconst StoreProvider = ({ children }) => {\n    const store = useStore()\n    return (\n        <Context.Provider value={{ ...store }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default StoreProvider","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport StoreProvider from './store/StoreProvider';\n\nconst Store = () => {\n    return (\n        <StoreProvider>\n            <App />\n        </StoreProvider>\n    )\n}\n\nReactDOM.render(<Store />, document.getElementById('root'));\n"],"sourceRoot":""}